/*Функции и стрелочные функции*/
//Если переменная объявлена внутри функции, вне функции эта переменная не доступна 
//Замыкание, то есть если в функции запрашивается переменная, то она ищется С НАЧАЛА в самой функции
//если ее не находит, то поиск переходит за пределы функции 

/*Есть три типа функций
    первый тип классический:
    function name(){
        код
    }
    Его преймущество заключается в том, что эти функции объявляются сначала, 
    прежде чем будет выполняться основной код, поэтому не важно, когда была вызвана функция 

    второй тип Функциональное выражение: 
    let foo = function(){
        код
    }
    Она создается тогда, когда доходит поток кода и ее можно вызвать только после ее объявления 

    Третий тип, это стрелочные функции
    Она не имеет контекста вызова 
*/
let num = 10;

function showFirstMessage(){
    console.log("Hello World!");
    let num = 20;
    console.log(num);
}

showFirstMessage();

console.log(num);

function calc(a, b){
    return a + b; 
    //если сразу после служебного слова return будет какой-то код, то он просто проигнорируется 
}

calc(10, 4);
calc(5, 6);


//функциональное выражение 

let foo = function(){
    console.log("Hello");
};

foo();


//анонимные функции 

const calcc = (a, b) => {return a + b};
// const calcc = a => {return a};

const test = (a) => {
    console.log(a);
};

